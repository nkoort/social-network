{"version":3,"file":"static/js/637.8a6ba514.chunk.js","mappings":"oLACA,EAAuB,0BAAvB,EAA0D,4BAA1D,EAA8F,2B,SCgB9F,EAdoB,SAACA,GACnB,IACIC,EAAO,YAAcD,EAAME,GAE/B,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKC,IAAKL,EAAMM,IAAKC,IAAI,QAE3B,SAAC,KAAD,CAASC,GAAIP,EAAME,UARF,SAAAM,GAAO,OAAIA,EAAQC,SAAWN,EAAeA,GAQ9D,SAA6CJ,EAAMW,WCXzD,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0BAA3G,EAAiJ,2BCAjJ,GAAgB,QAAU,0BAA0B,GAAK,qBAAqB,KAAO,wBCsBrF,EApBgB,SAACX,GAUf,OACE,iBAAKG,UAAS,UAAKC,EAAAA,QAAL,YATI,MAAdJ,EAAMY,KACGR,EAAAA,GAGAA,EAAAA,MAKb,WACE,gBAAKD,UAAWC,EAAAA,MAAhB,UACE,gBAAKC,IAAI,gHAAgHE,IAAI,QAE/H,gBAAKJ,UAAWC,EAAAA,KAAhB,SAA6BJ,EAAMa,cCjBzC,GAAgB,cAAgB,gCAAgC,SAAW,2BAA2B,WAAa,8B,uCCM7GC,GAAYC,EAAAA,EAAAA,GAAiB,IAmBtBC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,eAAlBD,EAjBX,SAACjB,GAEhB,OACE,gBAAKG,UAAWC,EAAAA,gBAAhB,UACE,iBAAMe,SAAUnB,EAAMoB,aAAtB,UACE,iBAAKjB,UAAWC,EAAAA,cAAhB,WACA,SAACiB,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUZ,KAAM,WAAYa,YAAY,eACtDC,SAAU,CAACC,EAAAA,EAAeZ,MAC5B,gBAAKX,UAAWC,EAAAA,OAAhB,UACE,mBAAQD,UAAWC,EAAAA,WAAnB,gFCcZ,EAzBgB,SAACJ,GACf,IAAI2B,EAAW3B,EAAM2B,SAASC,KAAI,SAACf,GAAD,OAAa,SAAC,EAAD,CAC7CA,QAASA,EAAQA,QAASD,KAAMC,EAAQD,UACtCiB,EAAU7B,EAAM6B,QAAQD,KAAI,SAACE,GAAD,OAAY,SAAC,EAAD,CAC1C5B,GAAI4B,EAAO5B,GAAIS,KAAMmB,EAAOnB,KAAML,IAAKwB,EAAOxB,SAMhD,OACE,iBAAKH,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGyB,KAEH,iBAAK1B,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGuB,KAEH,SAACX,EAAD,CAAcG,SAdD,SAACY,GAClB/B,EAAMgC,WAAWD,EAASE,oB,mBCU9B,GAAeC,E,QAAAA,KAEbC,EAAAA,EAAAA,KAlBoB,SAACC,GACrB,MAAO,CACLT,SAAUS,EAAMC,aAAaV,SAC7BE,QAASO,EAAMC,aAAaR,QAC5BS,WAAYF,EAAMC,aAAaC,eAGV,SAACC,GACxB,MAAO,CACLP,WAAY,SAACM,GACXC,GAAUC,EAAAA,EAAAA,GAAuBF,SASrCG,EAAAA,EAHF,CAKGC","sources":["webpack://my-app/./src/components/Dialogs/DialogItem/DialogsItem.module.css?ac9e","components/Dialogs/DialogItem/DialogsItem.jsx","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Messages/Messages.module.css?2673","components/Dialogs/Messages/Messages.jsx","webpack://my-app/./src/components/Dialogs/Textarea/TextArea.module.css?5719","components/Dialogs/Textarea/TextArea.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"DialogsItem_item__s6MWd\",\"active\":\"DialogsItem_active__lkzSQ\",\"photo\":\"DialogsItem_photo__KT1Mq\"};","import { NavLink } from 'react-router-dom';\r\nimport style from './DialogsItem.module.css';\r\n\r\nconst DialogsItem = (props) => {\r\n  const returnActive = navData => navData.isActive ? style.active : style.item;\r\n  let path = '/dialogs/' + props.id\r\n\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.photo}>\r\n        <img src={props.img} alt=\"\" />\r\n      </div>\r\n      <NavLink to={path} className={returnActive}>{props.name}</NavLink>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default DialogsItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__0DcDy\",\"dialogsItems\":\"Dialogs_dialogsItems__oxriy\",\"messages\":\"Dialogs_messages__cnwm8\",\"messBlock\":\"Dialogs_messBlock__XxeK9\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Messages_message__GeCfo\",\"my\":\"Messages_my__kBock\",\"comp\":\"Messages_comp__thv53\"};","import style from './Messages.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n  const typeClass = function typeFunc () {\r\n    if (props.type == 'my') {\r\n      let clas = style.my\r\n      return clas\r\n    } else {\r\n      let clas = style.comp\r\n      return clas;\r\n    }\r\n  }\r\n  return (\r\n    <div className={`${style.message} ${typeClass()}`}>\r\n      <div className={style.photo}>\r\n        <img src=\"https://filestore.community.support.microsoft.com/api/images/f2e55cbf-8316-4d3a-9412-ecd8194b2a72?upload=true\" alt=\"\" />\r\n      </div>\r\n      <div className={style.text}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"textAreaBlock\":\"TextArea_textAreaBlock__wWqkG\",\"textArea\":\"TextArea_textArea__ITRee\",\"buttonText\":\"TextArea_buttonText__fqSuH\"};","import React from 'react';\r\nimport style from './TextArea.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../Common/FormsControl/FormsControls';\r\nimport {requiredField, maxLengthCreator} from '../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst TextArea = (props) => {\r\n\r\n  return (\r\n    <div className={style.textAreaElement}>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div className={style.textAreaBlock}>\r\n        <Field component={Textarea} name={'textarea'} placeholder='New messages'\r\n            validate={[requiredField, maxLength]}/>\r\n          <div className={style.button}>\r\n            <button className={style.buttonText}>ОТПРАВИТЬ</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TextAreaForm = reduxForm({ form: 'newMessages' })(TextArea);\r\n\r\nexport default TextAreaForm;","import React from 'react';\r\nimport DialogsItem from './DialogItem/DialogsItem';\r\nimport style from './Dialogs.module.css';\r\nimport Message from './Messages/Messages';\r\nimport { TextAreaForm } from './Textarea/TextArea';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let messages = props.messages.map((message) => <Message\r\n    message={message.message} type={message.type} />);\r\n  let dialogs = props.dialogs.map((dialog) => <DialogsItem\r\n    id={dialog.id} name={dialog.name} img={dialog.img} />);\r\n  const newMessage = (formData) => {\r\n    props.addMessage(formData.textarea)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogsItems}>\r\n        {dialogs}\r\n      </div>\r\n      <div className={style.messages}>\r\n        <div className={style.messBlock}>\r\n          {messages}\r\n        </div>\r\n        <TextAreaForm onSubmit={newMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;","import { addMessageAtionCreator, updateMessageTextAtionCreator } from '../../Redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messages: state.messagesPage.messages,\r\n    dialogs: state.messagesPage.dialogs,\r\n    newMessage: state.messagesPage.newMessage,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessage) => {\r\n      dispatch( addMessageAtionCreator(newMessage) )\r\n    },\r\n  }\r\n}\r\n\r\n\r\nexport default compose (\r\n  \r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect,\r\n  \r\n) (Dialogs);\r\n"],"names":["props","path","id","className","style","src","img","alt","to","navData","isActive","name","type","message","maxLength","maxLengthCreator","TextAreaForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","messages","map","dialogs","dialog","formData","addMessage","textarea","compose","connect","state","messagesPage","newMessage","dispatch","addMessageAtionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}